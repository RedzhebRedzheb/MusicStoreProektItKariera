@using MusicStore.Models
@model Order

@{
    ViewData["Title"] = "Delete Order";
}

<div class="container">
    <h1>Delete Order</h1>
    <h3>Are you sure you want to delete this order?</h3>

    <div class="alert alert-warning">
        <h4>This action will:</h4>
        <ul>
            <li>Permanently delete this order record</li>
            <li>Restore @Model.OrderItems.Sum(oi => oi.Quantity) items to stock</li>
        </ul>
    </div>

    <div class="row">
        <div class="col-md-6">
            <dl class="row">
                <dt class="col-sm-4">Order ID:</dt>
                <dd class="col-sm-8">@Model.Id</dd>

                <dt class="col-sm-4">Order Date:</dt>
                <dd class="col-sm-8">@Model.OrderDate.ToString("f")</dd>

                <dt class="col-sm-4">Status:</dt>
                <dd class="col-sm-8">
                    <span class="badge badge-@GetStatusBadge(Model.Status)">@Model.Status</span>
                </dd>

                <dt class="col-sm-4">Total Items:</dt>
                <dd class="col-sm-8">@Model.OrderItems.Sum(oi => oi.Quantity)</dd>
            </dl>
        </div>
    </div>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <button type="submit" class="btn btn-danger">Confirm Delete</button>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@functions {
    string GetStatusBadge(string status) => status switch
    {
        "Pending" => "warning",
        "Processing" => "primary",
        "Shipped" => "success",
        "Delivered" => "dark",
        "Cancelled" => "danger",
        _ => "secondary"
    };
}